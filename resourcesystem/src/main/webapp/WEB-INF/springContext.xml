<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"

	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd 
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">                
       <!-- srpingMVC 负责serlvet跳转  这个xml文件只过滤一个servlet  可以书写拦截器 -->
    <context:annotation-config />
    <!-- 一定要写在src/main/java文件夹中才能被扫描到-->
    <context:component-scan
		base-package="com.lovo.resourcesystem.controller"></context:component-scan>
  

    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler />

    <!-- if you use annotation you must configure following setting -->
    <mvc:annotation-driven />
    
    <!-- configure the InternalResourceViewResolver -->
   	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
            id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/jsp/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>
    
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/z/" p:suffix=".jsp"></bean>
  <!-- mvc:annotation-driven使用注解功能 -->    
  <mvc:annotation-driven>    
    <mvc:message-converters register-defaults="true">    
        <!--json处理,spring管理第三方的json转换，由spring来调用第三方组件把对象转换为json-->    
        <bean    
            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
            <property name="supportedMediaTypes">    
                <list>    
                    <value>application/json;charset=UTF-8</value>    
                    <value>text/html;charset=UTF-8</value>    
                </list>    
            </property>    
          </bean>    
      </mvc:message-converters>    
   </mvc:annotation-driven>
   
    <!--配置拦截器, 多个拦截器,顺序执行 -->
   <!--  <mvc:interceptors>  
        <mvc:interceptor>  
            匹配的是url路径， 如果不配置或/**,将拦截所有的Controller
            <mvc:mapping path="/addtext.lovo" />
               <mvc:mapping path="/findListRole.lovo" />
            <mvc:mapping path="/user/**" />
                      放行页面
             <mvc:exclude-mapping path=""/>
         
            <bean class="com.lovo.servlet.Lanjieqi"></bean>  
        </mvc:interceptor>
        当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法
    </mvc:interceptors>   -->
    
  <!--        文件上传设置   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
            <property name="defaultEncoding" value="utf-8"></property>     
            <property name="maxUploadSize" value="10485760000"></property>    
            <property name="maxInMemorySize" value="40960"></property>    
            </bean>   -->

    

</beans>